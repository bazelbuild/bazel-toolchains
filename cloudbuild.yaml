# Generate Bazel C++ & Java toolchain configs for the latest available Bazel version & Ubuntu 16.04
# based RBE toolchain container (l.gcr.io/google/rbe-ubuntu16-04:latest) and upload the generated
# configs to GCS.
steps:
# Build the RBE Config generator & uploader using Go 1.15.
- name: golang:1.15
  args:
  - go
  - build
  - -o
  - rbe_configs_gen
  - github.com/bazelbuild/bazel-toolchains/cmd/rbe_configs_gen
- name: golang:1.15
  args:
  - go
  - build
  - -o
  - rbe_configs_upload
  - github.com/bazelbuild/bazel-toolchains/cmd/rbe_configs_upload

# Run the configs generator in the GCB docker builder because the config generator will launch a
# docker container to generate C++ configs.
- name: gcr.io/cloud-builders/docker
  entrypoint: ./rbe_configs_gen
  # We don't specify a Bazel version which should make the tool generate configs for the latest
  # available Bazel release.
  args:
    # Latest available RBE Toolchain docker image.
  - --toolchain_container=l.gcr.io/google/rbe-ubuntu16-04:latest
  - --exec_os=linux
  - --target_os=linux
  - --output_tarball=rbe_default.tar
  - --output_manifest=manifest.json

# Publish the generated configs to GCS. The configs are *always* published, regardless of whether
# the contents of the configs tarball have changed. The manifest always includes an update because
# it includes the upload timestamp. See the docs at the top of rbe_configs_upload.go for details on
# where configs are uploaded on GCS.
#
# This step doesn't need docker but just picking the same container as above.
- name: gcr.io/cloud-builders/docker
  entrypoint: ./rbe_configs_upload
  args:
  - --configs_tarball=rbe_default.tar
  - --configs_manifest=manifest.json


