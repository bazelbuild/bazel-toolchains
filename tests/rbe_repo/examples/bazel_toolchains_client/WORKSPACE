# Copyright 2017 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workspace(name = "bazel_toolchains_client")

local_repository(
    name = "bazel_toolchains",
    path = "../../../..",
)

local_repository(
    name = "toolchain_config_host",
    path = "../toolchain_config_host",
)

load("@bazel_toolchains//rules:rbe_repo.bzl", "rbe_autoconfig")

rbe_autoconfig(
    name = "rbe_default",
    use_checked_in_confs = "Force",
)

load(
    "@toolchain_config_host//configs/test_configs:repo.bzl",
    "CUSTOM_ENV1",
    "CUSTOM_ENV2",
    "CUSTOM_ENV3",
    "CUSTOM_RBE_REPO",
)
load(
    "@toolchain_config_host//configs/test_configs:versions.bzl",
    rbe_custom_bazel_to_config_versions = "bazel_to_config_versions",
    rbe_custom_configs = "configs",
    rbe_custom_container_to_config_version = "container_to_config_version",
)

# Basic test for rbe_custom, the corresponding GCB build should first
# build the @toolchain_config_host so this one can use those.
rbe_autoconfig(
    name = "rbe_custom",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    use_checked_in_confs = "Force",
)

# Should use checked-in configs as, even though container is specified, latest is
# set as tag.
rbe_autoconfig(
    name = "rbe_custom_tag_latest",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    registry = CUSTOM_RBE_REPO["container_registry"],
    repository = CUSTOM_RBE_REPO["container_repo"],
    tag = "latest",
    use_checked_in_confs = "Force",
)

# This test should generate configs as we use a custom env.
rbe_autoconfig(
    name = "rbe_custom_generate_env",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    env = {"CUSTOM_KEY": "CUSTOM_VALUE"},
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
)

# This test uses the custom rbe_repo. It should not generate configs as, even
# though target overrides repository and digest (using rbe-ubuntu16-04
# container), its setting the base container digest to point to a compatible
# bazel one for which configs are pre-generated.
rbe_autoconfig(
    name = "rbe_custom_base_container_digest",
    base_container_digest = CUSTOM_RBE_REPO["latest_container"],
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    digest = "sha256:94d7d8552902d228c32c8c148cc13f0effc2b4837757a6e95b73fdc5c5e4b07b",
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    registry = "gcr.io",
    repository = "google/rbe-ubuntu16-04",
    use_checked_in_confs = "Force",
)

# This one should not generate configs either, as, even though it uses a custom
# config_name, the preeceding step which builds @rbe_custom_config_name in
# @toolchain_config_host should generate the configs.
rbe_autoconfig(
    name = "rbe_custom_config_name",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    config_name = "test_config_name",
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    use_checked_in_confs = "Force",
)

# The three tests below should not generate configs as the corresponding
# targets in @toolchain_config_host should pre-generate them.
# These tests validate the versions.bzl file can be modified by
# several configs and remain valid.
rbe_autoconfig(
    name = "rbe_custom_env1",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    config_name = "test_env1",
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    env = CUSTOM_ENV1,
    export_configs = True,
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    use_checked_in_confs = "Force",
)

rbe_autoconfig(
    name = "rbe_custom_env2",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    config_name = "test_env2",
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    env = CUSTOM_ENV2,
    export_configs = True,
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    use_checked_in_confs = "Force",
)

rbe_autoconfig(
    name = "rbe_custom_env3",
    bazel_to_config_version_map = rbe_custom_bazel_to_config_versions(),
    config_name = "test_env3",
    container_to_config_version_map = rbe_custom_container_to_config_version(),
    env = CUSTOM_ENV3,
    export_configs = True,
    rbe_repo = CUSTOM_RBE_REPO,
    rbe_repo_configs = rbe_custom_configs(),
    use_checked_in_confs = "Force",
)
