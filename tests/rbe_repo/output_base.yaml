# Steps in this file use toolchain configs produced by rbe_autoconf**
# targets. Their purpose is to verify the configs are usable on RBE.
# Tests below generate configs in the output_base and then
# use those for RBE builds.
steps:
# Builds rbe_autoconfig targets
- name: 'l.gcr.io/google/bazel'
  args:
  - build
  - --
  - "@rbe_autoconf_output_base//..."
  - "@rbe_autoconf_config_repos_output_base//..."
  env: ['RBE_AUTOCONF_ROOT=/workspace']

# Tests rbe_autoconf when output_base is used produces outputs that are
# usable for an RBE build.
- name: 'l.gcr.io/google/bazel'
  args:
  - --bazelrc=rbe-test-output/config/rbe_autoconf_output_base/.latest.bazelrc
  - test
  - //examples/remotebuildexecution/hello_world/cc:say_hello_test
  - --config=remote
  - --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
  - --java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
  - --remote_instance_name=projects/asci-toolchain/instances/default_instance
  env: ['RBE_AUTOCONF_ROOT=/workspace']

# Tests rbe_autoconf when output_base and config_repos are used
# produces outputs that are usable for an RBE build.
- name: 'l.gcr.io/google/bazel'
  args:
  - --bazelrc=rbe-test-output/config/rbe_autoconf_output_base/.latest.bazelrc
  - test
  - //examples/remotebuildexecution/hello_world/cc:say_hello_test
  - --config=remote
  - --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
  - --java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8
  - --remote_instance_name=projects/asci-toolchain/instances/default_instance
  env: ['RBE_AUTOCONF_ROOT=/workspace']
